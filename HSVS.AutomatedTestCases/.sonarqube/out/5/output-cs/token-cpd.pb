¯\
`D:\AccionLabs\Help\AutomatedTestCases\HSVS.AutomatedTestCases\HSVS.AutomatedTestCases\Program.cs
	namespace 	
HSVS
 
. 
AutomatedTestCases !
{ 
class 	
Program
 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
LogFileHelper 
log 
= 
new  #
LogFileHelper$ 1
(1 2
)2 3
;3 4
string 
message 
= 
$str 0
;0 1
log 
. 
WriteToFile 
( 
message #
)# $
;$ %
Console 
. 
	WriteLine 
( 
$str 1
)1 2
;2 3
Console 
. 
	WriteLine 
( 
$str ;
); <
;< =
Console 
. 
	WriteLine 
( 
$str 2
)2 3
;3 4
Console 
. 
	WriteLine 
( 
$str /
)/ 0
;0 1
Console 
. 
	WriteLine 
( 
$str 6
)6 7
;7 8
var 
choice 
= 
Console  
.  !
ReadLine! )
() *
)* +
;+ ,
switch 
( 
choice 
) 
{ 
case 
$str 
: 
LoadScripts 
(  
)  !
;! "
break 
; 
case 
$str 
: 

LoadTables   
(   
)    
;    !
break!! 
;!! 
case"" 
$str"" 
:"" 
ExecuteCustomQuery## &
(##& '
)##' (
;##( )
break$$ 
;$$ 
case%% 
$str%% 
:%% 
CheckHospitalCount&& &
(&&& '
)&&' (
;&&( )
break'' 
;'' 
}** 
message,, 
=,, 
$str,, #
;,,# $
log-- 
.-- 
WriteToFile-- 
(-- 
message-- #
)--# $
;--$ %
}.. 	
public// 
static// 
void// 
ExecuteCustomQuery// -
(//- .
)//. /
{00 	
Console11 
.11 
	WriteLine11 
(11 
$str11 2
)112 3
;113 4
var33 
myQuery33 
=33 
Console33 !
.33! "
ReadLine33" *
(33* +
)33+ ,
;33, -
BusinessLogicLayer44 
objBusiness44 *
=44+ ,
new44- 0
BusinessLogicLayer441 C
(44C D
)44D E
;44E F
if55 
(55 
!55 
string55 
.55 
IsNullOrEmpty55 %
(55% &
myQuery55& -
)55- .
)55. /
{66 
objBusiness77 
.77 
MyCustomQuery77 )
(77) *
myQuery77* 1
)771 2
;772 3
}88 
else99 
{:: 
ExecuteCustomQuery;; "
(;;" #
);;# $
;;;$ %
}<< 
}== 	
public>> 
static>> 
void>> 
LoadScripts>> &
(>>& '
)>>' (
{?? 	
BusinessLogicLayer@@ 
objBusiness@@ *
=@@+ ,
new@@- 0
BusinessLogicLayer@@1 C
(@@C D
)@@D E
;@@E F
LogFileHelperAA 
loggerAA  
=AA! "
newAA# &
LogFileHelperAA' 4
(AA4 5
)AA5 6
;AA6 7
tryBB 
{CC 
ConsoleDD 
.DD 
	WriteLineDD !
(DD! "
$strDD" 7
)DD7 8
;DD8 9
varFF 
pathFF 
=FF 
ConsoleFF "
.FF" #
ReadLineFF# +
(FF+ ,
)FF, -
;FF- .
foreachGG 
(GG 
stringGG 
fileNameGG  (
inGG) +
	DirectoryGG, 5
.GG5 6
GetFilesGG6 >
(GG> ?
pathGG? C
)GGC D
)GGD E
{HH 
stringJJ 
extJJ 
=JJ  
PathJJ! %
.JJ% &
GetExtensionJJ& 2
(JJ2 3
fileNameJJ3 ;
)JJ; <
;JJ< =
ifLL 
(LL 
extLL 
.LL 
ToUpperLL #
(LL# $
)LL$ %
==LL& (
(LL) *
$strLL* 0
)LL0 1
.LL1 2
ToUpperLL2 9
(LL9 :
)LL: ;
)LL; <
{MM 
varNN 

fileStreamNN &
=NN' (
newNN) ,

FileStreamNN- 7
(NN7 8
fileNameNN8 @
,NN@ A
FileModeNNB J
.NNJ K
OpenNNK O
,NNO P

FileAccessNNQ [
.NN[ \
ReadNN\ `
)NN` a
;NNa b
usingOO 
(OO 
varOO "
streamReaderOO# /
=OO0 1
newOO2 5
StreamReaderOO6 B
(OOB C

fileStreamOOC M
,OOM N
EncodingOOO W
.OOW X
UTF8OOX \
)OO\ ]
)OO] ^
{PP 
stringQQ "
functionContentQQ# 2
=QQ3 4
streamReaderQQ5 A
.QQA B
	ReadToEndQQB K
(QQK L
)QQL M
;QQM N
ifRR 
(RR  
!RR  !
stringRR! '
.RR' (
IsNullOrEmptyRR( 5
(RR5 6
functionContentRR6 E
)RRE F
)RRF G
{SS 
objBusinessUU  +
.UU+ ,"
CreateFunctionfromFileUU, B
(UUB C
fileNameUUC K
,UUK L
functionContentUUM \
)UU\ ]
;UU] ^
}VV 
}XX 
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
	Exception\\ 
ex\\ 
)\\  
{]] 
logger^^ 
.^^ 
WriteToFile^^ "
(^^" #
$str^^# D
+^^E F
ex^^G I
.^^I J
Message^^J Q
)^^Q R
;^^R S
}__ 
}`` 	
publicaa 
staticaa 
voidaa 

LoadTablesaa %
(aa% &
)aa& '
{bb 	
LogFileHelpercc 
loggercc  
=cc! "
newcc# &
LogFileHelpercc' 4
(cc4 5
)cc5 6
;cc6 7
BusinessLogicLayerdd 
objBusinessdd *
=dd+ ,
newdd- 0
BusinessLogicLayerdd1 C
(ddC D
)ddD E
;ddE F
tryee 
{ff 
stringgg 
hidgg 
=gg 
$strgg (
;gg( )
stringhh 
[hh 
]hh 
tableswithoutHIDhh )
=hh* +
{hh, -
$strhh. >
,hh> ?
$strhh@ [
,hh[ \
$strhh] x
,hhx y
$str	hhz ñ
,
hhñ ó
$str
hhò ¥
,
hh¥ µ
$str
hh∂ ‹
,
hh‹ ›
$str
hhﬁ Ê
,
hhÊ Á
$str
hhË ˆ
,
hhˆ ˜
$str
hh¯ ˝
,
hh˝ ˛
$str
hhˇ â
,
hhâ ä
$str
hhã ú
,
hhú ù
$str
hhû Ω
,
hhΩ æ
$str
hhø —
,
hh— “
$str
hh” ·
,
hh· ‚
$str
hh„ ˆ
}
hh˜ ¯
;
hh¯ ˘
stringjj 
[jj 
]jj 
tableswithHIDjj &
=jj' (
{jj) *
$strjj+ U
,jjU V
$str	jjW Ç
,
jjÇ É
$str
jjÑ §
,
jj§ •
$str
jj¶  
,
jj  À
$str
jjÃ Ì
,
jjÌ Ó
$str
jjÔ É
,
jjÉ Ñ
$str
jjÖ î
,
jjî ï
$str
jjñ ≠
,
jj≠ Æ
$str
jjØ π
,
jjπ ∫
$str
jjª ƒ
,
jjƒ ≈
$str
jj∆ ÿ
,
jjÿ Ÿ
$str
jj⁄ Ú
,
jjÚ Û
$str
jjÙ á
,
jjá à
$str
jjâ ¢
,
jj¢ £
$str
jj§ π
,
jjπ ∫
$str
jjª œ
,
jjœ –
$str
jj— Û
}
jjÙ ı
;
jjı ˆ
fornn 
(nn 
varnn 
inn 
=nn 
$numnn 
;nn 
inn  !
<nn" #
tableswithoutHIDnn$ 4
.nn4 5
Lengthnn5 ;
;nn; <
inn= >
++nn> @
)nn@ A
{oo 
loggerpp 
.pp 
WriteToFilepp &
(pp& '
$strpp' F
+ppG H
tableswithoutHIDppI Y
[ppY Z
ippZ [
]pp[ \
)pp\ ]
;pp] ^
objBusinessqq 
.qq  %
GetDatafromQueryandInsertqq  9
(qq9 :
$strqq: J
+qqK L
tableswithoutHIDqqM ]
[qq] ^
iqq^ _
]qq_ `
+qqa b
$strqqc f
,qqf g
tableswithoutHIDqqh x
[qqx y
iqqy z
]qqz {
)qq{ |
;qq| }
}rr 
loggerww 
.ww 
WriteToFileww "
(ww" #
$strww# J
)wwJ K
;wwK L
objBusinessxx 
.xx %
GetDatafromQueryandInsertxx 5
(xx5 6
$strxx6 c
+xxd e
hidxxf i
+xxj k
$strxxl o
,xxo p
$str	xxq Ç
)
xxÇ É
;
xxÉ Ñ
for~~ 
(~~ 
var~~ 
i~~ 
=~~ 
$num~~ 
;~~ 
i~~  !
<~~" #
tableswithHID~~$ 1
.~~1 2
Length~~2 8
;~~8 9
i~~: ;
++~~; =
)~~= >
{ 
logger
ÄÄ 
.
ÄÄ 
WriteToFile
ÄÄ &
(
ÄÄ& '
$str
ÄÄ' F
+
ÄÄG H
tableswithHID
ÄÄI V
[
ÄÄV W
i
ÄÄW X
]
ÄÄX Y
)
ÄÄY Z
;
ÄÄZ [
objBusiness
ÅÅ 
.
ÅÅ  '
GetDatafromQueryandInsert
ÅÅ  9
(
ÅÅ9 :
$str
ÅÅ: J
+
ÅÅK L
tableswithHID
ÅÅM Z
[
ÅÅZ [
i
ÅÅ[ \
]
ÅÅ\ ]
+
ÅÅ^ _
$str
ÅÅ` q
+
ÅÅr s
hid
ÅÅt w
+
ÅÅx y
$str
ÅÅz }
,
ÅÅ} ~
tableswithHIDÅÅ å
[ÅÅå ç
iÅÅç é
]ÅÅé è
)ÅÅè ê
;ÅÅê ë
}
ÇÇ 
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
ex
ÖÖ 
)
ÖÖ  
{
ÜÜ 
logger
áá 
.
áá 
WriteToFile
áá "
(
áá" #
$str
áá# C
+
ááD E
ex
ááF H
.
ááH I
Message
ááI P
)
ááP Q
;
ááQ R
}
àà 
}
ââ 	
public
ää 
static
ää 
void
ää  
CheckHospitalCount
ää -
(
ää- .
)
ää. /
{
ãã 	
BeginTestCases
åå 
obj
åå 
=
åå  
new
åå! $
BeginTestCases
åå% 3
(
åå3 4
)
åå4 5
;
åå5 6
obj
êê 
.
êê 
InsertSampleData
êê  
(
êê  !
$num
êê! "
,
êê" #
$str
êê$ -
,
êê- .
$str
êê/ :
)
êê: ;
;
êê; <
int
ëë 
a
ëë 
=
ëë 
obj
ëë 
.
ëë %
GetSampleTableDataCount
ëë /
(
ëë/ 0
)
ëë0 1
;
ëë1 2
}
íí 	
}
ìì 
}îî õ
pD:\AccionLabs\Help\AutomatedTestCases\HSVS.AutomatedTestCases\HSVS.AutomatedTestCases\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 2
)2 3
]3 4
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 4
)4 5
]5 6
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *